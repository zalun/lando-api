swagger: '2.0'
info:
  title: Lando API
  description: An API to get and land Phabricator revisions.
  version: "0.1.0"
securityDefinitions:
  PhabricatorAPIKeyHeader:
    type: apiKey
    in: header
    name: X-Phabricator-API-Key
  Auth0AccessToken:
    type: apiKey
    in: header
    name: Authorization
    description: An Auth0 access token with the proper lando-api audience. Note
                 that the value of this header should be a Bearer token, but
                 it is not possible to define that with swagger 2.0. Please
                 pass the api key value as "Bearer access_token". The token
                 should have the 'lando', 'openid', 'email', and 'profile'
                 scopes.

produces:
  - application/json
paths:
  /:
    get:
      summary: Redirect to the API UI and documentation
      responses:
        302:
          description: Redirect to the UI
          headers:
            Location:
              description: Where to redirect to
              type: string
  /revisions/{revision_id}:
    get:
      description: |
        Gets a revision's information as well as the information of
        all of its parent Revisions. By default only public revisions are
        accessible. If a Phabricator API key is set in the X-Phabricator-API-Key
        header, then you may access private Revisions which the owner of the api
        key has access to.
      security:
        - {}
        - PhabricatorAPIKeyHeader: []
      parameters:
        - name: revision_id
          in: path
          type: string
          description: |
            The id of the revision in the form of 'D{number}', e.g. 'D12345'.
          required: true
        - name: diff_id
          in: query
          type: integer
          description: |
            The id of the optional diff. By default an active diff will
            be returned.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Revision'
        404:
          description: Revision does not exist
          schema:
            allOf:
              - $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
  /landings:
    get:
      operationId: landoapi.api.landings.get_list
      description: |
        Get list of jobs scheduled to land depending on the revision
        and/or status
      parameters:
        - name: revision_id
          in: query
          type: string
          required: true
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Landing'
        404:
          description: Revision does not exist
          schema:
            allOf:
              - $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'

    post:
      description: |
        Sends request to transplant service and responds just the status code.
        By default only public revisions are accessible. If a Phabricator API
        key is set in the X-Phabricator-API-Key header, then you may access
        private Revisions which the owner of the api key has access to.
      security:
        - Auth0AccessToken: []
        - Auth0AccessToken: []
          PhabricatorAPIKeyHeader: []
      parameters:
        - name: data
          required: true
          in: body
          description: |
            The id of the revision and a diff to land. This can either be in
            form of 'D12345' (as seen in Phabricator URLs), or just the id
            number.
          required: true
          schema:
            type: object
            required:
              - revision_id
              - diff_id
            properties:
              revision_id:
                type: string
              diff_id:
                type: integer
              force_override_of_diff_id:
                type: integer
                description: |
                  An optional field. Diff id to override. Landing of an
                  inactive diff is possible if this field is equal to the
                  active diff id for the revision. If not provided or not equal
                  to the active diff id an attempt to land an inactive diff
                  will be prevented.
      responses:
        202:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: integer
                description: |
                  A newly created Landing id
        404:
          description: Revision does not exist
          schema:
            allOf:
              - $ref: '#/definitions/Error'
        409:
          description: Unsuccessful attempt to land an inactive diff.
          schema:
            allOf:
              - $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
  /landings/dryrun:
    post:
      operationId: landoapi.api.landings.dryrun
      description: |
        Check for any issues that may prevent the caller from landing the given
        revision. By default only public revisions are accessible. If a
        Phabricator API key is set in the X-Phabricator-API-Key header, then
        you may access private Revisions which the owner of the api key has
        access to.
      security:
        - Auth0AccessToken: []
        - Auth0AccessToken: []
          PhabricatorAPIKeyHeader: []
      parameters:
        - name: data
          required: true
          in: body
          schema:
            type: object
            required:
              - revision_id
              - diff_id
            properties:
              revision_id:
                type: string
                description: |
                  The id of the revision in the form of 'D{number}', e.g.
                  'D12345'.
              diff_id:
                type: integer
                description: |
                  The phabricator diff ID to land.
              force_override_of_diff_id:
                type: integer
                description: |
                  An optional field. Diff id to override. Landing of an
                  inactive diff is possible if this field is equal to the
                  active diff id for the revision. If not provided or not equal
                  to the active diff id an attempt to land an inactive diff
                  will be prevented.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/LandingAssessment'
        404:
          description: Revision does not exist
          schema:
            allOf:
              - $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
  /landings/update:
    post:
      operationId: landoapi.api.landings.update
      description: |
        Receive an update of the landing status from Transplant API
      parameters:
        - name: API-Key
          description: A Transplant API key
          in: header
          required: true
          type: string
        - name: data
          in: body
          description: |
            Retrieve status of the landing job
          required: true
          schema:
            type: object
            required:
              - request_id
              - landed
            properties:
              request_id:
                type: integer
              tree:
                type: string
              rev:
                type: string
              destination:
                type: string
              trysyntax:
                type: string
              landed:
                type: boolean
              error_msg:
                type: string
              result:
                type: string
      responses:
        200:
          description: OK
        403:
          description: Service not authorized
          schema:
            allOf:
              - $ref: '#/definitions/Error'
        404:
          description: Landing does not exist
          schema:
            allOf:
              - $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
  /landings/{landing_id}:
    get:
      description: |
        Request the status of the landing job.
      parameters:
        - name: landing_id
          in: path
          type: integer
          description: |
            The id of the landing to return
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Landing'
        404:
          description: Landing does not exist
          schema:
            allOf:
              - $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            allOf:
              - $ref: '#/definitions/Error'
definitions:
  Landing:
    type: object
    properties:
      id:
        type: integer
        description: |
          The id of the Landing
      request_id:
        type: integer
        description: |
          The id of the Request in Transplant service
      status:
        type: string
        enum: [aborted, landed, failed, submitted]
        description: |
          Status of the landing job in Transplant service
      revision_id:
        type: string
        description: |
          The id of the Revision in the form of D{number}
      diff_id:
        type: integer
        description: |
          diff id used to land
      result:
        type: string
        description: |
          revision (sha) of push if landed == true
      error_msg:
        type: string
        description: |
          Error message if landing failed
      requester_email:
        type: string
        description: |
          Email of the requester
      tree:
        type: string
        description: |
          The repo the revision will land to
      created_at:
        type: string
        format: date-time
        description: |
          UTC time of creation
      updated_at:
        type: string
        format: date-time
        description: |
          UTC time of the last update
  Revision:
    type: object
    properties:
      revision_id:
        type: string
        description: |
          The id of the revision in the form of D{number}
      phid:
        type: string
        description: |
          The phid of the revision.
      bug_id:
        type: integer
        description: |
          The ID of the Bugzilla bug this revision belongs to. Or null if
          it is not attached to a specific bug.
      title:
        type: string
        description: |
          The title of the revision.
      url:
        type: string
        description: |
          A url to the revision on Phabricator.
      date_created:
        type: integer
        description: |
          The date that the revision was created as a unix timestamp.
      date_modified:
        type: integer
        description: |
          The date that the revision was last modified as a unix timestamp.
      status:
        type: integer
        description: |
          An integer representing the review status of the revision.
          0 - Needs Review.
          1 - Needs Revision.
          2 - Approved.
          3 - Closed.
          4 - Abandoned.
          5 - Changes Planned.
          Phabricator may use other integers to represent other statuses, but,
          these are not known at this time.
      status_name:
        type: string
        description: |
          A string representation of the status as determined by Phabricator.
      summary:
        type: string
        description: |
          The summary provided on the revision.
      test_plan:
        type: string
        description: |
          The test plan provided on the revision.
      commit_message_title:
        type: string
        description: |
          The first line of the commit message that will be used when landing
          the revision.
      commit_message:
        type: string
        description: |
          The full commit message that will be used when landing the revision.
          It is formatted to include the revision title, bug id, reviewers,
          and revision URL.
      diff:
        $ref: '#/definitions/Diff'
        description: |
          The most recent diff for the revision.
      author:
        $ref: '#/definitions/User'
      reviewers:
        type: array
        items:
          $ref: '#/definitions/Reviewer'
      repo:
        $ref: '#/definitions/Repo'
      parent_revisions:
        type: array
        items:
          $ref: '#/definitions/Revision'
        description: |
          A list of revisions which this revision depends on. I.e. this revision
          cannot land until its parents have landed. This list will almost
          always contain just one revision. That revision may itself also have
          parent revisions. Traverse each parent revision until one without any
          parent is found to determine the full dependancy chain.
  User:
    type: object
    properties:
      phid:
        type: string
        description: |
          The phid of the user.
      username:
        type: string
        description: |
          The user's username on Phabricator.
      real_name:
        type: string
        description: |
          The user's real name as they set it on Phabricator.
      url:
        type: string
        description: |
          A url pointing to the user on Phabricator.
      image_url:
        type: string
        description: |
          A url pointing to the user's Phabricator avatar.
  Reviewer:
    type: object
    description: |
      Representation of the reviewer in the context of a revision.
    properties:
      phid:
        type: string
        description: |
          The phid of the user.
      username:
        type: string
        description: |
          The reviewer's username on Phabricator.
      status:
        type: string
        enum: [added, accepted, blocking, rejected, resigned]
        description: |
          Status set by or on the reviewer. Users added as blocking reviewers
          have status set to "blocking" instead of "added".
      real_name:
        type: string
        description: |
          The reviewer's real name as they set it on Phabricator.
      is_blocking:
        type: boolean
        description: |
          True if the reviewer is blocking the revision. Phabricator is not
          consistent about this field. If the user is added as a blocking
          reviewer it's value is true. However after the user accepts or
          rejects the revision, is_blocking value changes to false.
  Repo:
    type: object
    properties:
      phid:
        type: string
        description: |
          The phid of the repo.
      short_name:
        type: string
        description: |
          A short representation of the repo name.
      full_name:
        type: string
        description: |
          The full name of the repo.
      url:
        type: string
        description: |
          A url pointing to the repo on Phabricator.
  Diff:
    type: object
    properties:
      id:
        type: integer
        description: |
          The integer id of the Diff.
      revision_id:
        type: string
        description: |
          The id of the Revision that this Diff belongs to e.g. 'D123'.
      date_created:
        type: integer
        description: |
          The date this Diff was created as a unix timestamp.
      date_modified:
        type: integer
        description: |
          The date this Diff was last modified as a unix timestamp.
      vcs_base_revision:
        type: string
        description: |
          The commit hash id of the commit that this Diff was based on. I.e.
          the parent commit of the commits used to make this Diff.
      authors:
        type: array
        description: |
          An array of the authors for each commit that was used in creating
          this diff, sorted by tip commit first.
        items:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
  LandingAssessment:
    type: object
    properties:
      confirmation_token:
        type: string
        description: |
          A token to be passed along with the landing request when the caller
          goes to land a revision.  By receiving and passing the token along
          the caller asserts that they have acknowledged all of the warnings.
          For example, the caller could present a UI with the warnings to the
          end user and have the user acknowledge the warnings with a checkbox.
          Once acknowledged, the UI can pass the confirmation token to the
          landings endpoint so the landing can proceed.
      warnings:
        type: array
        items:
          $ref: '#/definitions/LandingProblem'
        description: |
          A list of issues that the caller should acknowledge before landing
          their revision.  The caller can signal acknowledgement by sending the
          confirmation_token with their landing request.
      problems:
        type: array
        items:
          $ref: '#/definitions/LandingProblem'
        description: |
          A list of problems that stop landing of this revision, such as
          insufficient version control privileges.
  LandingProblem:
    type: object
    properties:
      id:
        type: string
        description: |
          The id of the problem or warning as a string, such as W125 or E42
      message:
        type: string
        description: |
          A detailed human-readable description of the issue. This message
          should be suitable for display in a user interface.
  # RFC 7807 Problem Details for HTTP APIs (https://tools.ietf.org/html/rfc7807)
  # is used for error messages. Extensions to the error can be speced using an
  # "allOf" schema keyword along with additional schema definition
  Error:
    type: object
    properties:
      status:
        type: integer
      type:
        type: string
      title:
        type: string
      detail:
        type: string
      instance:
        type: string
